Metadata-Version: 2.1
Name: kratosgui_python
Version: 0.0.1
Summary: Python-based life detection GUI for Project Kratos, BITS Goa
Author-email: Pruthu Gambhir <pruthugambhir@gmail.com>
License: Copyright (c) 2018 The Python Packaging Authority
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/pypa/sampleproject
Project-URL: Issues, https://github.com/pypa/sampleproject/issues
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# KRATOS LIFE DETECTION GUI

## USAGE 

Open the ros package in the terminal and install all python dependencies

```
pip install -r requirements.txt 
```

If you do not have **pip**,
```
python -m ensurepip --upgrade
python get-pip.py
```

Ensuring that you are still in the same directory, open the flask app like so
```
flask run --debug
```

then proceed to launch all the files in the src 
```
rosrun kratosgui_python <file_name>.py
```

## TESTING 

### NOTE: this part is NOT compulsory, you do not need to do it every time
#### When using the tester or any other files in this, MAKE SURE the topic names are correct, pretty much the only thing that matters

take yourself to the ```.test``` folder, with testing for each websocket. 

The order of sensors to websockets is as follows: 

1. BME280: [ws://localhost:8765](ws://localhost:8765)
2. Multichannel gas sensor: [ws://localhost:8766](ws://localhost:8766)
3. SGP30: [ws://localhost:8767](ws://localhost:8767)
4. Spectrometer: [ws://localhost:8768](ws://localhost:8768)
5. Temperature sensor: [ws://localhost:8769](ws://localhost:8769)

you will find the tester file for each websocket titled ```<websocket_port>_tester.py```, run it like so
```
python3 <websocket_port>_tester.py
```

once you do, use ```websocat``` to see if the data is being published in the following format 

### using ```websocat```
install it using ```wget``` and setting its permissions to make it a system-wide command
```
sudo wget -qO /usr/local/bin/websocat https://github.com/vi/websocat/releases/latest/download/websocat.x86_64-unknown-linux-musl
sudo chmod a+x /usr/local/bin/websocat
```
then recieve the data in the websocket using the following command
```
websocat ws://localhost:<websocket_port>
```

